@page "/accounts/delete/{id:int}"
@inject IMeterReadingsApiClient apiClient
@inject NavigationManager NavigationManager

<h1>Delete Account</h1>
<h3>Are you sure you want to delete this?</h3>
<hr />

@if (accountModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <dl>
            <dt>Account Id</dt>
            <dd>@accountModel.Id</dd>
            <dt>First Name</dt>
            <dd> @accountModel.FirstName</dd>
            <dt>Last Name</dt>
            <dd> @accountModel.LastName</dd>
        </dl>
    </div>

    <EditForm Model="@accountModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <button type="submit">Delete</button>
    </EditForm>

    <p>
        <NavLink href="/accounts">Back to Accounts</NavLink>
    </p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private AccountViewModel accountModel = new();

    protected override async Task OnInitializedAsync()
    {
        AccountDto accountDto = await apiClient.Accounts.GetAsync(Id);
        accountModel = new Mapper(ViewModelMapperConfig.Config).Map<AccountViewModel>(accountDto);
    }

    private async Task HandleValidSubmit()
    {
        await apiClient.Accounts.DeleteAsync(accountModel.Id);

        NavigationManager.NavigateTo("/accounts");
    }
}
